/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import accesoADatos.AlumnoData;
import accesoADatos.InscripcionData;
import entidades.Alumno;
import entidades.Inscripciones;
import entidades.Materia;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MANUEL
 */
public class CargarNotas extends javax.swing.JInternalFrame {

    Alumno alumno = null;
    DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            if (columna == 2) {
                return true;
            }
            return false;
        }
    };

    /**
     * Creates new form CargarNotas
     */
    public CargarNotas() {
        initComponents();
        cargarCombo();
        armarCabecera();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextAlu = new javax.swing.JLabel();
        jComboalu = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        jbtnGuardar = new javax.swing.JButton();
        jbtnSalir = new javax.swing.JButton();
        Fondo = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cargar Notas");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 161, 27));

        jTextAlu.setForeground(new java.awt.Color(0, 0, 0));
        jTextAlu.setText("Seleccione el alumno:");
        jPanel1.add(jTextAlu, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 140, 20));

        jComboalu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboaluActionPerformed(evt);
            }
        });
        jPanel1.add(jComboalu, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 280, -1));

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTabla);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, -1, 203));

        jbtnGuardar.setText("Guardar");
        jbtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 120, -1));

        jbtnSalir.setText("Salir");
        jbtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 360, 110, -1));
        jPanel1.add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalirActionPerformed
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnSalirActionPerformed

    private void jComboaluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboaluActionPerformed
        // TODO add your handling code here:
        vaciarTabla();
        alumno = (Alumno) jComboalu.getSelectedItem();
        if (alumno == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un alumno");
        } else if (alumno.isActivo() == false) {
            JOptionPane.showMessageDialog(this, "debe seleccionar un alumno activo");
        } else {
            armarTabla(InscripcionData.listadoInscripciones(alumno));
        }

    }//GEN-LAST:event_jComboaluActionPerformed

    private void jbtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGuardarActionPerformed

        int filaSeleccionada = jTabla.getSelectedRow();

        if (filaSeleccionada != -1) {
            int materiaId = (Integer) jTabla.getValueAt(filaSeleccionada, 0);
            String materia = (String) jTabla.getValueAt(filaSeleccionada, 1);
            double nota = Double.parseDouble(jTabla.getValueAt(filaSeleccionada, 2).toString());

            InscripcionData.modificarNota(materiaId, alumno, nota);

            String mensajeNotas = "Materia: " + materia + ", Nueva Nota: " + nota + "\n";
            JOptionPane.showMessageDialog(this, "Notas actualizadas:\n" + mensajeNotas, "Notas Actualizadas", JOptionPane.INFORMATION_MESSAGE);
        } else if (alumno.isActivo()==false) {
            JOptionPane.showMessageDialog(this, "no se puede guardar una materia en un alumno inactivo");
        }else{
 
            JOptionPane.showMessageDialog(this, "Debe seleccionar una materia para actualizar", "Ninguna Materia Seleccionada", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jbtnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Fondo;
    private javax.swing.JComboBox<Alumno> jComboalu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabla;
    private javax.swing.JLabel jTextAlu;
    private javax.swing.JButton jbtnGuardar;
    private javax.swing.JButton jbtnSalir;
    // End of variables declaration//GEN-END:variables

    private void cargarCombo() {
        ArrayList<Alumno> alu = AlumnoData.listarAlumno();
        jComboalu.addItem(null);
        for (Alumno alumno : alu) {
            jComboalu.addItem(alumno);
        }

    }

    private void armarCabecera() {
        modelo.addColumn("ID Materia");
        modelo.addColumn("Nombre");
        modelo.addColumn("Nota");
        jTabla.setModel(modelo);

    }

    private void vaciarTabla() {
        modelo.setRowCount(0);
    }

    private void armarTabla(ArrayList<Inscripciones> listado) {
        //tenemos el alumno

        for (Inscripciones inscripcion : listado) {
            modelo.addRow(new Object[]{inscripcion.getMateria().getIdMateria(), inscripcion.getMateria().getNombre(), inscripcion.getNota()});
        }

    }
}
