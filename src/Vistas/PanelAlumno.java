/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import accesoADatos.AlumnoData;

import entidades.Alumno;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Kanko
 */
public class PanelAlumno extends javax.swing.JInternalFrame {

    /**
     * Creates new form PanelAlumno
     */
    public PanelAlumno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDocumento = new javax.swing.JLabel();
        jLabelApellido = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelEstado = new javax.swing.JLabel();
        jLabelFechaNac = new javax.swing.JLabel();
        JbBuscarDoc = new javax.swing.JButton();
        ButtonEstado = new javax.swing.JRadioButton();
        jButtonNuevo = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jTextFieldDocumento = new javax.swing.JTextField();
        jTextFieldApellido = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabelFormulario = new javax.swing.JLabel();
        fechaNacimiento = new com.toedter.calendar.JDateChooser();
        fondo = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelDocumento.setForeground(new java.awt.Color(0, 0, 0));
        jLabelDocumento.setText("Documento:");
        getContentPane().add(jLabelDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 84, 20));

        jLabelApellido.setForeground(new java.awt.Color(0, 0, 0));
        jLabelApellido.setText("Apellido:");
        getContentPane().add(jLabelApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        jLabelNombre.setForeground(new java.awt.Color(0, 0, 0));
        jLabelNombre.setText("Nombre:");
        getContentPane().add(jLabelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jLabelEstado.setForeground(new java.awt.Color(0, 0, 0));
        jLabelEstado.setText("Estado:");
        getContentPane().add(jLabelEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));

        jLabelFechaNac.setForeground(new java.awt.Color(0, 0, 0));
        jLabelFechaNac.setText("Fecha de nacimiento:");
        getContentPane().add(jLabelFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        JbBuscarDoc.setText("Buscar");
        JbBuscarDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbBuscarDocActionPerformed(evt);
            }
        });
        getContentPane().add(JbBuscarDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, -1, -1));

        ButtonEstado.setText("jRadioButton2");
        getContentPane().add(ButtonEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 20, -1));

        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 410, -1, -1));

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 410, -1, -1));

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 410, -1, -1));

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(494, 410, -1, -1));
        getContentPane().add(jTextFieldDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 254, -1));
        getContentPane().add(jTextFieldApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 254, -1));
        getContentPane().add(jTextFieldNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 254, -1));

        jLabelFormulario.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabelFormulario.setForeground(new java.awt.Color(0, 0, 0));
        jLabelFormulario.setText("Formulario de Alumnos");
        getContentPane().add(jLabelFormulario, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 230, -1));
        getContentPane().add(fechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 200, -1));
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 600, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JbBuscarDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbBuscarDocActionPerformed
        try {
            int dni = Integer.parseInt(jTextFieldDocumento.getText());
            Alumno alumno = AlumnoData.buscarAlumno(dni);

            // Hacer algo con el objeto Alumno encontrado (por ejemplo, mostrarlo en una ventana)
            if (alumno != null) {
                jTextFieldNombre.setText(alumno.getNombre());
                jTextFieldApellido.setText(alumno.getApellido());
                ButtonEstado.setSelected(alumno.isActivo());

                LocalDate fechaNacimientoAlumno = alumno.getFechaNacimiento();
                Date fechaNacimientoDate = java.sql.Date.valueOf(fechaNacimientoAlumno);
                fechaNacimiento.setDate(fechaNacimientoDate);
                //mensaje alumno encontrado
                String mensaje = "Nombre: " + alumno.getNombre() + "\n"
                        + "Apellido: " + alumno.getApellido() + "\n"
                        + "Estado: " + (alumno.isActivo() ? "Activo" : "Inactivo") + "\n"
                        + "Fecha de Nacimiento: " + fechaNacimientoAlumno;
                JOptionPane.showMessageDialog(null, mensaje, "Información del Alumno", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró ningún alumno con el DNI proporcionado", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un número de DNI válido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_JbBuscarDocActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        if (jTextFieldApellido.getText().isEmpty() || jTextFieldNombre.getText().isEmpty() || jTextFieldDocumento.getText().isEmpty() || fechaNacimiento.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos");
        } else {
            try {
                int dni = Integer.parseInt(jTextFieldDocumento.getText());
                String apellido = jTextFieldApellido.getText();
                String nombre = jTextFieldNombre.getText();
                boolean estado = ButtonEstado.isSelected();
                Date fecha = fechaNacimiento.getDate();
                LocalDate fecha2 = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

                int largoNombre = nombre.length();

                if (verificarNombreApellido(nombre, apellido) == false) {

                    Alumno alumno = new Alumno(nombre, apellido, dni, fecha2, estado);
                    AlumnoData.cargaAlumnos(alumno);
                    JOptionPane.showMessageDialog(this, "alumno cargado correctamente");

                    jTextFieldNombre.setText("");
                    jTextFieldApellido.setText("");
                    jTextFieldDocumento.setText("");
                    fechaNacimiento.setDate(null);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Ingrese correctamente su documento");
                jTextFieldDocumento.setText("");
            }

        }
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        try {
            int dni = Integer.parseInt(jTextFieldDocumento.getText());
            Alumno alumno = AlumnoData.buscarAlumno(dni);

            if (alumno != null) {
                alumno.setActivo(false);
                ButtonEstado.setSelected(false);

                AlumnoData.borrarAlumno(alumno.getIdAlumno());

                JOptionPane.showMessageDialog(
                        null,
                        "El alumno " + alumno.getNombre() + " ha sido marcado como inactivo",
                        "Desactivacion exitosa",
                        JOptionPane.INFORMATION_MESSAGE
                );
            } else {
                JOptionPane.showMessageDialog(
                        null,
                        "No se encontro ninguna alumno",
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(
                    null,
                    "Ingrese un numero de dni valido",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed


    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        int dni = 0;
        if (jTextFieldDocumento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "ingrese un dni");

        } else {
            try {
                dni = Integer.parseInt(jTextFieldDocumento.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Ingrese correctamente su documento", "Error", JOptionPane.ERROR_MESSAGE);
                jTextFieldDocumento.setText("");
                return;
            }

            Alumno alumno = AlumnoData.buscarAlumno(dni);

            if (jTextFieldApellido.getText().isEmpty() || jTextFieldNombre.getText().isEmpty() || jTextFieldDocumento.getText().isEmpty() || fechaNacimiento.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Debe completar todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    String nombre = jTextFieldNombre.getText();
                    String apellido = jTextFieldApellido.getText();

                    if (!verificarNombreApellido(nombre, apellido)) {
                        alumno.setDni(dni);
                        alumno.setNombre(nombre);
                        alumno.setApellido(apellido);

                        Date fecha = fechaNacimiento.getDate();
                        LocalDate fecha2 = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                        alumno.setFechaNacimiento(fecha2);
                        alumno.setActivo(ButtonEstado.isSelected());

                        AlumnoData.modificarAlumno(alumno);

                        JOptionPane.showMessageDialog(this, "El alumno ha sido modificado");
                    }

                } catch (Exception ex) {
                }

            }
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ButtonEstado;
    private javax.swing.JButton JbBuscarDoc;
    private com.toedter.calendar.JDateChooser fechaNacimiento;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabelApellido;
    private javax.swing.JLabel jLabelDocumento;
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JLabel jLabelFechaNac;
    private javax.swing.JLabel jLabelFormulario;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldDocumento;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables
private boolean verificarNombreApellido(String nombre, String apellido) {

        int largoNombre = nombre.length();
        int largoApellido = apellido.length();
        boolean bandera = false;
        boolean bandera1 = false;
        boolean bandera2 = false;
        for (int i = 0; i < largoNombre; i++) {
            bandera1 = false;
            if (Character.isDigit(nombre.charAt(i))) {
                JOptionPane.showMessageDialog(this, "Su nombre contiene números");
                jTextFieldNombre.setText("");
                bandera1 = true;
                break;
            }

        }

        for (int i = 0; i < largoApellido; i++) {
            bandera2 = false;
            if (Character.isDigit(apellido.charAt(i))) {
                JOptionPane.showMessageDialog(this, " Su apellido contiene números");
                jTextFieldApellido.setText("");
                bandera2 = true;
                break;
            }

        }
        if (bandera1 == false && bandera2 == false) {
            bandera = false;
        } else {
            bandera = true;
        }
        return bandera;
    }

}
